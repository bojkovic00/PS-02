|DE0_TOP
CLOCK_50 => CLOCK_50.IN2
CLOCK_50_2 => ~NO_FANOUT~
BUTTON[0] => ~NO_FANOUT~
BUTTON[1] => ~NO_FANOUT~
BUTTON[2] => ~NO_FANOUT~
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => SW[9].IN2
HEX0_D[0] <= hex:hex_inst1.out
HEX0_D[1] <= hex:hex_inst1.out
HEX0_D[2] <= hex:hex_inst1.out
HEX0_D[3] <= hex:hex_inst1.out
HEX0_D[4] <= hex:hex_inst1.out
HEX0_D[5] <= hex:hex_inst1.out
HEX0_D[6] <= hex:hex_inst1.out
HEX0_DP <= <VCC>
HEX1_D[0] <= hex:hex_inst2.out
HEX1_D[1] <= hex:hex_inst2.out
HEX1_D[2] <= hex:hex_inst2.out
HEX1_D[3] <= hex:hex_inst2.out
HEX1_D[4] <= hex:hex_inst2.out
HEX1_D[5] <= hex:hex_inst2.out
HEX1_D[6] <= hex:hex_inst2.out
HEX1_DP <= <VCC>
HEX2_D[0] <= hex:hex_inst3.out
HEX2_D[1] <= hex:hex_inst3.out
HEX2_D[2] <= hex:hex_inst3.out
HEX2_D[3] <= hex:hex_inst3.out
HEX2_D[4] <= hex:hex_inst3.out
HEX2_D[5] <= hex:hex_inst3.out
HEX2_D[6] <= hex:hex_inst3.out
HEX2_DP <= <VCC>
HEX3_D[0] <= hex:hex_inst4.out
HEX3_D[1] <= hex:hex_inst4.out
HEX3_D[2] <= hex:hex_inst4.out
HEX3_D[3] <= hex:hex_inst4.out
HEX3_D[4] <= hex:hex_inst4.out
HEX3_D[5] <= hex:hex_inst4.out
HEX3_D[6] <= hex:hex_inst4.out
HEX3_DP <= <VCC>
LEDG[0] <= <GND>
LEDG[1] <= <GND>
LEDG[2] <= <GND>
LEDG[3] <= <GND>
LEDG[4] <= <GND>
LEDG[5] <= <GND>
LEDG[6] <= <GND>
LEDG[7] <= <GND>
LEDG[8] <= <GND>
LEDG[9] <= <GND>
UART_TXD <= <GND>
UART_RXD => ~NO_FANOUT~
UART_CTS <= <GND>
UART_RTS => ~NO_FANOUT~
DRAM_DQ[0] <> <UNC>
DRAM_DQ[1] <> <UNC>
DRAM_DQ[2] <> <UNC>
DRAM_DQ[3] <> <UNC>
DRAM_DQ[4] <> <UNC>
DRAM_DQ[5] <> <UNC>
DRAM_DQ[6] <> <UNC>
DRAM_DQ[7] <> <UNC>
DRAM_DQ[8] <> <UNC>
DRAM_DQ[9] <> <UNC>
DRAM_DQ[10] <> <UNC>
DRAM_DQ[11] <> <UNC>
DRAM_DQ[12] <> <UNC>
DRAM_DQ[13] <> <UNC>
DRAM_DQ[14] <> <UNC>
DRAM_DQ[15] <> <UNC>
DRAM_ADDR[0] <= <GND>
DRAM_ADDR[1] <= <GND>
DRAM_ADDR[2] <= <GND>
DRAM_ADDR[3] <= <GND>
DRAM_ADDR[4] <= <GND>
DRAM_ADDR[5] <= <GND>
DRAM_ADDR[6] <= <GND>
DRAM_ADDR[7] <= <GND>
DRAM_ADDR[8] <= <GND>
DRAM_ADDR[9] <= <GND>
DRAM_ADDR[10] <= <GND>
DRAM_ADDR[11] <= <GND>
DRAM_ADDR[12] <= <GND>
DRAM_LDQM <= <GND>
DRAM_UDQM <= <GND>
DRAM_WE_N <= <GND>
DRAM_CAS_N <= <GND>
DRAM_RAS_N <= <GND>
DRAM_CS_N <= <GND>
DRAM_BA_0 <= <GND>
DRAM_BA_1 <= <GND>
DRAM_CLK <= <GND>
DRAM_CKE <= <GND>
FL_DQ[0] <> <UNC>
FL_DQ[1] <> <UNC>
FL_DQ[2] <> <UNC>
FL_DQ[3] <> <UNC>
FL_DQ[4] <> <UNC>
FL_DQ[5] <> <UNC>
FL_DQ[6] <> <UNC>
FL_DQ[7] <> <UNC>
FL_DQ[8] <> <UNC>
FL_DQ[9] <> <UNC>
FL_DQ[10] <> <UNC>
FL_DQ[11] <> <UNC>
FL_DQ[12] <> <UNC>
FL_DQ[13] <> <UNC>
FL_DQ[14] <> <UNC>
FL_DQ15_AM1 <> <UNC>
FL_ADDR[0] <= <GND>
FL_ADDR[1] <= <GND>
FL_ADDR[2] <= <GND>
FL_ADDR[3] <= <GND>
FL_ADDR[4] <= <GND>
FL_ADDR[5] <= <GND>
FL_ADDR[6] <= <GND>
FL_ADDR[7] <= <GND>
FL_ADDR[8] <= <GND>
FL_ADDR[9] <= <GND>
FL_ADDR[10] <= <GND>
FL_ADDR[11] <= <GND>
FL_ADDR[12] <= <GND>
FL_ADDR[13] <= <GND>
FL_ADDR[14] <= <GND>
FL_ADDR[15] <= <GND>
FL_ADDR[16] <= <GND>
FL_ADDR[17] <= <GND>
FL_ADDR[18] <= <GND>
FL_ADDR[19] <= <GND>
FL_ADDR[20] <= <GND>
FL_ADDR[21] <= <GND>
FL_WE_N <= <GND>
FL_RST_N <= <GND>
FL_OE_N <= <GND>
FL_CE_N <= <GND>
FL_WP_N <= <GND>
FL_BYTE_N <= <GND>
FL_RY => ~NO_FANOUT~
LCD_BLON <= <GND>
LCD_RW <= <GND>
LCD_EN <= <GND>
LCD_RS <= <GND>
LCD_DATA[0] <> <UNC>
LCD_DATA[1] <> <UNC>
LCD_DATA[2] <> <UNC>
LCD_DATA[3] <> <UNC>
LCD_DATA[4] <> <UNC>
LCD_DATA[5] <> <UNC>
LCD_DATA[6] <> <UNC>
LCD_DATA[7] <> <UNC>
SD_DAT0 <> <UNC>
SD_DAT3 <> <UNC>
SD_CMD <> <UNC>
SD_CLK <= <GND>
SD_WP_N => ~NO_FANOUT~
PS2_KBDAT <> ps2:ps2_inst.key_data
PS2_KBCLK <> deb:deb_inst.in
PS2_MSDAT <> <UNC>
PS2_MSCLK <> <UNC>
VGA_HS <= <GND>
VGA_VS <= <GND>
VGA_R[0] <= <GND>
VGA_R[1] <= <GND>
VGA_R[2] <= <GND>
VGA_R[3] <= <GND>
VGA_G[0] <= <GND>
VGA_G[1] <= <GND>
VGA_G[2] <= <GND>
VGA_G[3] <= <GND>
VGA_B[0] <= <GND>
VGA_B[1] <= <GND>
VGA_B[2] <= <GND>
VGA_B[3] <= <GND>
GPIO0_CLKIN[0] => ~NO_FANOUT~
GPIO0_CLKIN[1] => ~NO_FANOUT~
GPIO0_CLKOUT[0] <= <GND>
GPIO0_CLKOUT[1] <= <GND>
GPIO0_D[0] <> <UNC>
GPIO0_D[1] <> <UNC>
GPIO0_D[2] <> <UNC>
GPIO0_D[3] <> <UNC>
GPIO0_D[4] <> <UNC>
GPIO0_D[5] <> <UNC>
GPIO0_D[6] <> <UNC>
GPIO0_D[7] <> <UNC>
GPIO0_D[8] <> <UNC>
GPIO0_D[9] <> <UNC>
GPIO0_D[10] <> <UNC>
GPIO0_D[11] <> <UNC>
GPIO0_D[12] <> <UNC>
GPIO0_D[13] <> <UNC>
GPIO0_D[14] <> <UNC>
GPIO0_D[15] <> <UNC>
GPIO0_D[16] <> <UNC>
GPIO0_D[17] <> <UNC>
GPIO0_D[18] <> <UNC>
GPIO0_D[19] <> <UNC>
GPIO0_D[20] <> <UNC>
GPIO0_D[21] <> <UNC>
GPIO0_D[22] <> <UNC>
GPIO0_D[23] <> <UNC>
GPIO0_D[24] <> <UNC>
GPIO0_D[25] <> <UNC>
GPIO0_D[26] <> <UNC>
GPIO0_D[27] <> <UNC>
GPIO0_D[28] <> <UNC>
GPIO0_D[29] <> <UNC>
GPIO0_D[30] <> <UNC>
GPIO0_D[31] <> <UNC>
GPIO1_CLKIN[0] => ~NO_FANOUT~
GPIO1_CLKIN[1] => ~NO_FANOUT~
GPIO1_CLKOUT[0] <= <GND>
GPIO1_CLKOUT[1] <= <GND>
GPIO1_D[0] <> <UNC>
GPIO1_D[1] <> <UNC>
GPIO1_D[2] <> <UNC>
GPIO1_D[3] <> <UNC>
GPIO1_D[4] <> <UNC>
GPIO1_D[5] <> <UNC>
GPIO1_D[6] <> <UNC>
GPIO1_D[7] <> <UNC>
GPIO1_D[8] <> <UNC>
GPIO1_D[9] <> <UNC>
GPIO1_D[10] <> <UNC>
GPIO1_D[11] <> <UNC>
GPIO1_D[12] <> <UNC>
GPIO1_D[13] <> <UNC>
GPIO1_D[14] <> <UNC>
GPIO1_D[15] <> <UNC>
GPIO1_D[16] <> <UNC>
GPIO1_D[17] <> <UNC>
GPIO1_D[18] <> <UNC>
GPIO1_D[19] <> <UNC>
GPIO1_D[20] <> <UNC>
GPIO1_D[21] <> <UNC>
GPIO1_D[22] <> <UNC>
GPIO1_D[23] <> <UNC>
GPIO1_D[24] <> <UNC>
GPIO1_D[25] <> <UNC>
GPIO1_D[26] <> <UNC>
GPIO1_D[27] <> <UNC>
GPIO1_D[28] <> <UNC>
GPIO1_D[29] <> <UNC>
GPIO1_D[30] <> <UNC>
GPIO1_D[31] <> <UNC>


|DE0_TOP|deb:deb_inst
clk => cnt_reg[0].CLK
clk => cnt_reg[1].CLK
clk => cnt_reg[2].CLK
clk => cnt_reg[3].CLK
clk => cnt_reg[4].CLK
clk => cnt_reg[5].CLK
clk => cnt_reg[6].CLK
clk => cnt_reg[7].CLK
clk => ff_reg[0].CLK
clk => ff_reg[1].CLK
clk => out_reg.CLK
rst_n => cnt_reg[0].ACLR
rst_n => cnt_reg[1].ACLR
rst_n => cnt_reg[2].ACLR
rst_n => cnt_reg[3].ACLR
rst_n => cnt_reg[4].ACLR
rst_n => cnt_reg[5].ACLR
rst_n => cnt_reg[6].ACLR
rst_n => cnt_reg[7].ACLR
rst_n => ff_reg[0].ACLR
rst_n => ff_reg[1].ACLR
rst_n => out_reg.ACLR
in => ff_reg[0].DATAIN
out <= out_reg.DB_MAX_OUTPUT_PORT_TYPE


|DE0_TOP|ps2:ps2_inst
clk_50 => outdata_reg1[0].CLK
clk_50 => outdata_reg1[1].CLK
clk_50 => outdata_reg1[2].CLK
clk_50 => outdata_reg1[3].CLK
clk_50 => outdata_reg1[4].CLK
clk_50 => outdata_reg1[5].CLK
clk_50 => outdata_reg1[6].CLK
clk_50 => outdata_reg1[7].CLK
clk_50 => outdata_reg[0].CLK
clk_50 => outdata_reg[1].CLK
clk_50 => outdata_reg[2].CLK
clk_50 => outdata_reg[3].CLK
clk_50 => outdata_reg[4].CLK
clk_50 => outdata_reg[5].CLK
clk_50 => outdata_reg[6].CLK
clk_50 => outdata_reg[7].CLK
clk_50 => outdata_reg[8].CLK
clk_50 => outdata_reg[9].CLK
clk_50 => outdata_reg[10].CLK
clk_50 => index_reg[0].CLK
clk_50 => index_reg[1].CLK
clk_50 => index_reg[2].CLK
clk_50 => index_reg[3].CLK
clk_50 => index_reg[4].CLK
clk_50 => index_reg[5].CLK
clk_50 => index_reg[6].CLK
clk_50 => index_reg[7].CLK
clk_50 => index_reg[8].CLK
clk_50 => index_reg[9].CLK
clk_50 => index_reg[10].CLK
clk_50 => index_reg[11].CLK
clk_50 => index_reg[12].CLK
clk_50 => index_reg[13].CLK
clk_50 => index_reg[14].CLK
clk_50 => index_reg[15].CLK
clk_50 => index_reg[16].CLK
clk_50 => index_reg[17].CLK
clk_50 => index_reg[18].CLK
clk_50 => index_reg[19].CLK
clk_50 => index_reg[20].CLK
clk_50 => index_reg[21].CLK
clk_50 => index_reg[22].CLK
clk_50 => index_reg[23].CLK
clk_50 => index_reg[24].CLK
clk_50 => index_reg[25].CLK
clk_50 => index_reg[26].CLK
clk_50 => index_reg[27].CLK
clk_50 => index_reg[28].CLK
clk_50 => index_reg[29].CLK
clk_50 => index_reg[30].CLK
clk_50 => index_reg[31].CLK
clk_50 => state_reg~1.DATAIN
rst_n => outdata_reg1[0].ACLR
rst_n => outdata_reg1[1].ACLR
rst_n => outdata_reg1[2].ACLR
rst_n => outdata_reg1[3].ACLR
rst_n => outdata_reg1[4].ACLR
rst_n => outdata_reg1[5].ACLR
rst_n => outdata_reg1[6].ACLR
rst_n => outdata_reg1[7].ACLR
rst_n => outdata_reg[0].ACLR
rst_n => outdata_reg[1].ACLR
rst_n => outdata_reg[2].ACLR
rst_n => outdata_reg[3].ACLR
rst_n => outdata_reg[4].ACLR
rst_n => outdata_reg[5].ACLR
rst_n => outdata_reg[6].ACLR
rst_n => outdata_reg[7].ACLR
rst_n => outdata_reg[8].ACLR
rst_n => outdata_reg[9].ACLR
rst_n => outdata_reg[10].ACLR
rst_n => index_reg[0].ACLR
rst_n => index_reg[1].ACLR
rst_n => index_reg[2].ACLR
rst_n => index_reg[3].ACLR
rst_n => index_reg[4].ACLR
rst_n => index_reg[5].ACLR
rst_n => index_reg[6].ACLR
rst_n => index_reg[7].ACLR
rst_n => index_reg[8].ACLR
rst_n => index_reg[9].ACLR
rst_n => index_reg[10].ACLR
rst_n => index_reg[11].ACLR
rst_n => index_reg[12].ACLR
rst_n => index_reg[13].ACLR
rst_n => index_reg[14].ACLR
rst_n => index_reg[15].ACLR
rst_n => index_reg[16].ACLR
rst_n => index_reg[17].ACLR
rst_n => index_reg[18].ACLR
rst_n => index_reg[19].ACLR
rst_n => index_reg[20].ACLR
rst_n => index_reg[21].ACLR
rst_n => index_reg[22].ACLR
rst_n => index_reg[23].ACLR
rst_n => index_reg[24].ACLR
rst_n => index_reg[25].ACLR
rst_n => index_reg[26].ACLR
rst_n => index_reg[27].ACLR
rst_n => index_reg[28].ACLR
rst_n => index_reg[29].ACLR
rst_n => index_reg[30].ACLR
rst_n => index_reg[31].ACLR
rst_n => state_reg~3.DATAIN
key_clock => outdata_next1[0].CLK
key_clock => outdata_next1[1].CLK
key_clock => outdata_next1[2].CLK
key_clock => outdata_next1[3].CLK
key_clock => outdata_next1[4].CLK
key_clock => outdata_next1[5].CLK
key_clock => outdata_next1[6].CLK
key_clock => outdata_next1[7].CLK
key_clock => outdata_next[0].CLK
key_clock => outdata_next[1].CLK
key_clock => outdata_next[2].CLK
key_clock => outdata_next[3].CLK
key_clock => outdata_next[4].CLK
key_clock => outdata_next[5].CLK
key_clock => outdata_next[6].CLK
key_clock => outdata_next[7].CLK
key_clock => outdata_next[8].CLK
key_clock => outdata_next[9].CLK
key_clock => outdata_next[10].CLK
key_clock => index_next[0].CLK
key_clock => index_next[1].CLK
key_clock => index_next[2].CLK
key_clock => index_next[3].CLK
key_clock => index_next[4].CLK
key_clock => index_next[5].CLK
key_clock => index_next[6].CLK
key_clock => index_next[7].CLK
key_clock => index_next[8].CLK
key_clock => index_next[9].CLK
key_clock => index_next[10].CLK
key_clock => index_next[11].CLK
key_clock => index_next[12].CLK
key_clock => index_next[13].CLK
key_clock => index_next[14].CLK
key_clock => index_next[15].CLK
key_clock => index_next[16].CLK
key_clock => index_next[17].CLK
key_clock => index_next[18].CLK
key_clock => index_next[19].CLK
key_clock => index_next[20].CLK
key_clock => index_next[21].CLK
key_clock => index_next[22].CLK
key_clock => index_next[23].CLK
key_clock => index_next[24].CLK
key_clock => index_next[25].CLK
key_clock => index_next[26].CLK
key_clock => index_next[27].CLK
key_clock => index_next[28].CLK
key_clock => index_next[29].CLK
key_clock => index_next[30].CLK
key_clock => index_next[31].CLK
key_clock => state_next~1.DATAIN
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.DATAB
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => outdata_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => index_next.OUTPUTSELECT
key_data => state_next.OUTPUTSELECT
key_data => state_next.OUTPUTSELECT
out_data[0] <= outdata_reg[1].DB_MAX_OUTPUT_PORT_TYPE
out_data[1] <= outdata_reg[2].DB_MAX_OUTPUT_PORT_TYPE
out_data[2] <= outdata_reg[3].DB_MAX_OUTPUT_PORT_TYPE
out_data[3] <= outdata_reg[4].DB_MAX_OUTPUT_PORT_TYPE
out_data[4] <= outdata_reg[5].DB_MAX_OUTPUT_PORT_TYPE
out_data[5] <= outdata_reg[6].DB_MAX_OUTPUT_PORT_TYPE
out_data[6] <= outdata_reg[7].DB_MAX_OUTPUT_PORT_TYPE
out_data[7] <= outdata_reg[8].DB_MAX_OUTPUT_PORT_TYPE
out_data1[0] <= outdata_reg1[0].DB_MAX_OUTPUT_PORT_TYPE
out_data1[1] <= outdata_reg1[1].DB_MAX_OUTPUT_PORT_TYPE
out_data1[2] <= outdata_reg1[2].DB_MAX_OUTPUT_PORT_TYPE
out_data1[3] <= outdata_reg1[3].DB_MAX_OUTPUT_PORT_TYPE
out_data1[4] <= outdata_reg1[4].DB_MAX_OUTPUT_PORT_TYPE
out_data1[5] <= outdata_reg1[5].DB_MAX_OUTPUT_PORT_TYPE
out_data1[6] <= outdata_reg1[6].DB_MAX_OUTPUT_PORT_TYPE
out_data1[7] <= outdata_reg1[7].DB_MAX_OUTPUT_PORT_TYPE


|DE0_TOP|hex:hex_inst1
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|DE0_TOP|hex:hex_inst2
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|DE0_TOP|hex:hex_inst3
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|DE0_TOP|hex:hex_inst4
in[0] => Decoder0.IN3
in[1] => Decoder0.IN2
in[2] => Decoder0.IN1
in[3] => Decoder0.IN0
out[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
out[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
out[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
out[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
out[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
out[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
out[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


